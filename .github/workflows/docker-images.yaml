name: Build Docker Images

on:
  pull_request:
  push:
    tags: 
      - '*'
    paths:
      - "product-service/**"
      - "user-service/**"
      - "order-service/**"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REPO_OWNER: ${{ github.repository_owner }}
  GIT_USER: github-actions[bot]
  GIT_EMAIL: 41898282+github-actions[bot]@users.noreply.github.com

jobs:
  build:
    strategy:
      matrix:
        dockerfile: 
        [
          "product-service/Dockerfile",
          "user-service/Dockerfile",
          "order-service/Dockerfile"
        ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Log in to Github Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Prepare build context
        id: context
        run: |
          # Extract the name from the full path
          IMAGE_NAME=$(basename ${{ matrix.dockerfile }})
          # Get the directory path
          CONTEXT=$(dirname ${{ matrix.dockerfile }})

          echo "name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "context=${CONTEXT}" >> $GITHUB_OUTPUT

      - name: Extract image metadata for ${{ matrix.dockerfile }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.REPO_OWNER }}/${{ steps.context.outputs.name }}
          tags: |
            type=sha,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},event=branch,prefix=
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }},event=branch,prefix=
            type=ref,event=pr
            type=ref,event=tag

      - name: Build and push ${{ matrix.dockerfile }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ steps.context.outputs.context }}
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          secrets: |
            GITHUB_TOKEN=${{ secrets.GH_TOKEN }}
    
















