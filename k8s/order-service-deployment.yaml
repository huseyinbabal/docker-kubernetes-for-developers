apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: order-service
  name: order-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
      - env:
        - name: MONGO_HOST
          value: mongodb 
        - name: MONGO_PORT
          value: "27017"
        - name: MONGO_DB_NAME
          value: mydb
        - name: MONGO_USERNAME
          value: admin
        - name: MONGO_PASSWORD
          value: secret
        image: ghcr.io/huseyinbabal/order-service:1.0.0-rc.2
        imagePullPolicy: IfNotPresent
        name: order-service
        resources:
          requests:
            memory: "256Mi"
            cpu: "128m"
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  type: ClusterIP
  selector:
    app: order-service
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: microservices
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /\$2
    nginx.ingress.kubernetes.io/use-regex: "true"
spec:
  ingressClassName: nginx
  rules:
  - http:
      paths:
      - path: /users(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: user-service
            port:
              number: 8080
      - path: /products(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: product-service
            port:
              number: 8080
      - path: /api/v1/orders(/|$)(.*)
        pathType: ImplementationSpecific
        backend:
          service:
            name: order-service
            port:
              number: 8080
